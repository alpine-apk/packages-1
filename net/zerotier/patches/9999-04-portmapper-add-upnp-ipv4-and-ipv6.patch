--- a/osdep/PortMapper.cpp
+++ b/osdep/PortMapper.cpp
@@ -46,9 +46,11 @@
 #ifdef ZT_USE_SYSTEM_MINIUPNPC
 #include <miniupnpc/miniupnpc.h>
 #include <miniupnpc/upnpcommands.h>
+#include <miniupnpc/upnperrors.h>
 #else
 #include "../ext/miniupnpc/miniupnpc.h"
 #include "../ext/miniupnpc/upnpcommands.h"
+#include "../ext/miniupnpc/upnperrors.h"
 #endif
 
 #ifdef ZT_USE_SYSTEM_NATPMP
@@ -210,7 +212,34 @@ public:
 				struct IGDdatas data;
 
 				int upnpError = 0;
-				UPNPDev *devlist = upnpDiscoverAll(5000,(const char *)0,(const char *)0,0,0,2,&upnpError);
+				UPNPDev* devlist = nullptr;
+				UPNPDev* tmplist = nullptr;
+				for (int ipv6 = 0; ipv6 <= 1; ++ipv6) {
+					tmplist = upnpDiscoverAll(5000, (const char*)nullptr, (const char*)nullptr, UPNP_LOCAL_PORT_ANY, ipv6, 2, &upnpError);
+					if (upnpError != UPNPDISCOVER_SUCCESS || tmplist == nullptr) {
+#ifdef ZT_PORTMAPPER_TRACE
+						PM_TRACE("PortMapper: UPnP: upnpDiscoverAll(%s): %s or tmplist is empty" ZT_EOL_S, ipv6 == 1 ? "IPv6" : "IPv4", strupnperror(upnpError));
+#endif
+					}
+					else {
+						// found list, concat them
+						if (devlist == nullptr) {
+#ifdef ZT_PORTMAPPER_TRACE
+							PM_TRACE("PortMapper: UPnP: upnpDiscoverAll(%s) empty devlist" ZT_EOL_S, ipv6 == 1 ? "IPv6" : "IPv4");
+#endif
+							devlist = tmplist;
+						}
+						else {
+#ifdef ZT_PORTMAPPER_TRACE
+							PM_TRACE("PortMapper: UPnP: upnpDiscoverAll(%s) concat devlist" ZT_EOL_S, ipv6 == 1 ? "IPv6" : "IPv4");
+#endif
+							UPNPDev* tmp = nullptr;
+							for (tmp = devlist; tmp->pNext != nullptr; tmp = tmp->pNext)
+								;
+							tmp->pNext = tmplist;
+						}
+					}
+				}
 				if (devlist) {
 
 #ifdef ZT_PORTMAPPER_TRACE
